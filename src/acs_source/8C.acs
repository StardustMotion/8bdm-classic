#DEFINE NO_8C_FOG 11
#DEFINE C8_API_SPAWN_GOAL 0

// // --------------------------------------------------------------- //

/*
Spawn a goal/act end transition
@tid map spot TID where it should be spawned
@range radius size
@actEnd set to 1 for the 1->2 transition, set to 2 for 2->Boss transition
*/
function void spawnGoal(int tid, int range, int actEnd) {
    ACS_NamedExecuteWithResult("8C API", C8_API_SPAWN_GOAL, tid, range, actEnd);
}

// /**
// * Spawns enemy at spot like SpawnSpotFacingForced
// * @minPlayer only spawns if there are at least this much players (either 1, 3, 5 or 7)
// */

// function bool spawn8c(str name, int spotTid) {
//     return spawn8cMin(name,spotTid,1);
// }
// function bool spawn8cMin(str name, int spotTid, int minPlayer) {
//     if (!(minPlayer&0x1) || (minPlayer>>3)) {
//         log(l:"8C_ENEMY_MINPLAYER_ERROR", s:"\cc(\ck", s:name, s:"\cc, min. \ca", d:minPlayer, s:"\cc)");
//         return false;
//     }
//     if (ACS_NamedExecuteWithResult("8C API", API_8C_PLAYER_COUNT) < minPlayer) return false;
//     setStr8C("8bdm_wepTag", name);
//     setInt8C("8bdm_wepMult", spotTid);
// 	return ACS_NamedExecuteWithResult("8C API", API_8C_SPAWN_ENEMY);
// }



// // --------------------------------------------------------------- //




// // --------------------------- Internal, don't use code below --------------------------- //

// function void setInt8C(str cvar, int value) { ConsoleCommand(StrParam(s:"set ",s:cvar,s:" ",i:value)); }
// function void setStr8C(str cvar, str value) { ConsoleCommand(StrParam(s:"set ",s:cvar,s:" \"",s:value,s:"\"")); }

// // vanilla behavior overwrite because they have no API hook
// script "map_teleportfog" (void) { ACS_NamedExecuteWithResult("8C", NO_8C_FOG); }