

#DEFINE CVAR_HERO_SIZE "C8_hero_size"
function int getHeroSize(void) { 				        	    	return GetCvar(CVAR_HERO_SIZE); }

#DEFINE CVAR_HERO "C8_hero_"
function int getHero(int heroId) { 				        	    	return get8bFlagVal(CVAR_HERO, true, heroId); }
function void setHero(int heroId, int val) { 		            	set8bFlagVal(CVAR_HERO, true, heroId, val); }

#DEFINE CVAR_LOGIN "C8_login_"
function str getLogin(int player) { 								return strSanitize(GetCvarString(__login(player))); }
function void setLogin(int player, str login) { 					SetCVarString(__login(player), login); }
function str __login(int player) { 									return strParam(s:CVAR_LOGIN, d:player); }
function bool isLoggedIn(int player) { 								return isNetworkGame() && strLen(getLogin(player)); }

#DEFINE CVAR_SLOT "C8_slot"
// return -1 for quick play, 0 and 1 for account slots
function int getSlot(int player) { 									return get2bFlagVal(CVAR_SLOT, false, player)-1; }
function void setSlot(int player, int val) { 						set2bFlagVal(CVAR_SLOT, false, player, val+1); }

#DEFINE CVAR_PLAYER_HERO "C8_player_hero_"
function int getPlayerHero(int player, int slot) { 					return get8bFlagVal(__playerHero(player,slot), true, player)-1; }
function void setPlayerHero(int player, int slot, int val) { 		set8bFlagVal(__playerHero(player,slot), true, player, val+1); }
function str __playerHero(int player, int slot) { 					return strParam(s:CVAR_PLAYER_HERO, d:slot+1); }

#DEFINE CVAR_EXP "C8_exp_"
function int getExp(int player, int slot) {							return GetCvar(__exp(player,slot)); }
function void setExp(int player, int slot, int exp) {				SetCVar(__exp(player,slot), exp); }
function str __exp(int player, int slot) {							return strParam(s:CVAR_EXP, d:slot+1, d:player); }

#DEFINE CVAR_WEAPON "C8_weapon_"
function bool getPlayerWeapons(int player, int slot) {				return GetCvar(__playerWeapons(player,slot)); }
function void unlockWeapon(int player, int slot, int wepId) {
	str cvar = __playerWeapons(player,slot); 
	SetCVar(cvar, GetCvar(cvar) | (1 << wepId));
}
function void setPlayerWeapons(int player, int slot, int weps) {	SetCVar(__playerWeapons(player,slot), weps); }
function str __playerWeapons(int player, int slot) {				return strParam(s:CVAR_WEAPON, d:slot+1, d:player); }

#DEFINE CVAR_AUTOLOGIN "C8_autologin"


////////////////////////////////////
//  Hero/enemy specific fields    //
////////////////////////////////////

// Hero

// server noarchive string C8_hero_name_0 = 		"8C Megaman";
// server noarchive int	C8_hero_hp_0 = 			60;
// server noarchive int	C8_hero_puissance_0 = 	20;
// server noarchive string C8_nice_name_0 = 		"\cvMega Man\c-";
// server noarchive string C8_select_0 = 			"8CCHRAN0 8CCHRAN0";

function str getNiceName(int index) {                                return __getNiceName(getHero(index)); }
function str __getNiceName(int heroId) {                             return GetCvarString(strParam(s:"C8_nice_name_", d:heroId)); }

    

// testers
script "seto" (int i, int j) { setSlot(i,j); delay(1); log(d:getSlot(i)); }
script "geto" (int i) { log(s:getNiceName(i)); }





//////////////////////
// Database schema  //
//////////////////////

#DEFINE DB_FIELD_HERO_ID "player_hero_"
#DEFINE DB_FIELD_WEAPON "weapon_"
#DEFINE DB_FIELD_EXP "exp_"








/////////////////
//  Constants  //
/////////////////

#DEFINE INT_MAX 0x7fffffff
#DEFINE INT_MIN 0x80000000

#DEFINE MAX_HERO 256
#DEFINE MAX_CLIENTS 16
// -1 value is used to refer to quick play slot
#DEFINE MAX_SLOTS 2







/////////////////
//  Runtime   //
/////////////////

// Used for title screen and weapon selection
int client_menuStatus = -1;
function int getMenu(void) { return client_menuStatus; }
function void setMenu(int id) { client_menuStatus = id; }
function bool inMenu(void) { return getMenu() != -1; }