// 'lets give essential actors long-ass names'
actor proj : BasicProjectile { obituary "$8C_OBIT_DEFAULT" damagetype "normal" }
actor watcher : BasicWatcher { scale 2.5 }
actor gfx : BasicGraphicEffect {}
actor item : CustomInventory {}
actor var : Inventory { inventory.amount 1 inventory.maxamount 0xFFFFFFFF +INVENTORY.UNDROPPABLE }
actor varBool : var { inventory.maxamount 1 }
actor var16 : var { inventory.maxamount 0xFFFF }
actor var8 : var { inventory.maxamount 0xFF }

// a gfx that displays differently for its target (or tid in "mass") pointer
actor csGfx : gfx { alpha 0.5 mass 0 states {
    spawn: 
        TNT1 A 0
        goto check
    check: "----" A 0 A_JumpIf(CallACS("8C CS", CS_POV, mass), "targetPOV")
        "----" A 0 A_Jump(256, "otherPOV") goto otherPOV
    otherPOV: 
        "----" A 0 A_FadeIn(1.0)
        "----" A 0 A_Jump(256, "targetPOV")
        goto targetPOV
    targetPOV:	
        "----" A 1
        stop}}



actor "8C Static Move Giver" : PowerApropGiver {}
actor "8C Static Move" : PowerUp { powerup.duration 0x7FFFFFFF }
actor "8C On actor gravity Giver" : PowerApropGiver {}
actor "8C On actor gravity" : PowerUp { powerup.duration 0x7FFFFFFF }

actor "8C ID" : var16 { }
actor "8C Rank" : var8 { }

// 1b sign + 16b decimal [-0.5,0.5] HP representation
actor "8BDM HP" : var { inventory.maxamount 0x10000 }

// 16 bit for request ID, 16 bit for puke reply code given back by the server (OK, ERROR, etc). Read-only by client
actor "8C Puke Response" : var { }
// response value after being request-ID checked (read/write)
actor "8C Puke Status" : var16 { }

// Given by server to clients to throttle NET calls
actor "8C Puke Request" : powerup { powerup.duration 25 }

// State that prevents dealing/receiving dmg or effects
actor "8C Pacifist Stack" : var16 {}
actor "8C Pacifist Giver" : PowerApropGiver {}
actor "8C Pacifist" : PowerUp {  powerup.duration 0x7FFFFFFF }



actor "8C Puff" : gfx {
    states { spawn: 8CAA GHI 3 
        stop}}