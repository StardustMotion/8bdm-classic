#library "ecl1p5e"

#include "zcommon.acs"

#include "8bdmlib.acs"

Script "CCBM_ButtonCheck" (int theButton)
{
SetResultValue(PressingButton(theButton));
}

function bool PressingButton (int theButton)
{
return PressingButton2(GetPlayerInput(-1, INPUT_BUTTONS),theButton);
}

function bool PressingButton2 (int buttons, int theButton)
{
return ((buttons&theButton)>0);
}

script 512 (int state, int speedmodify)
{
if(GetActorProperty(0,APROP_HEALTH)>0){
switch(state)
{
case 1:
SetActorState (0, "CustomState1");
break;
case 2:
SetActorState (0, "CustomState2");
break;
case 3:
SetActorState (0, "CustomState3");
break;
case 4:
SetActorState (0, "CustomState4");
break;
case 5:
SetActorState (0, "CustomState5");
break;
case 6:
SetActorState (0, "CustomState6");
break;
case 7:
SetActorState (0, "CustomState7");
break;
case 8:
SetActorState (0, "CustomState8");
break;
case 9:
SetActorState (0, "CustomState9");
break;
case 10:
SetActorState (0, "CustomState10");
break;
case 11:
SetActorState (0, "CustomState11");
break;
case 12:
SetActorState (0, "CustomState12");
break;
case 13:
SetActorState (0, "CustomState13");
break;
case 14:
SetActorState (0, "CustomState14");
break;
case 15:
SetActorState (0, "CustomState15");
break;
}
switch(speedmodify)
{
case -5:
SetActorProperty(0,APROP_SPEED,0.50);
break;
case -4:
SetActorProperty(0,APROP_SPEED,0.60);
break;
case -3:
SetActorProperty(0,APROP_SPEED,0.70);
break;
case -2:
SetActorProperty(0,APROP_SPEED,0.80);
break;
case -1:
SetActorProperty(0,APROP_SPEED,0.90);
break;
case 0:
SetActorProperty(0,APROP_SPEED,1.00);
break;
case 1:
SetActorProperty(0,APROP_SPEED,1.20);
break;
case 2:
SetActorProperty(0,APROP_SPEED,1.40);
break;
case 3:
SetActorProperty(0,APROP_SPEED,1.60);
break;
case 4:
SetActorProperty(0,APROP_SPEED,1.80);
break;
case 5:
SetActorProperty(0,APROP_SPEED,2.00);
break;
}
}
}

script "Yamatocounter" (void)
{
SetResultValue(CheckInventory("YamatoClassAmmo2"));
}

script "SR50Display" (void)
{
int buttons;
while(GetActorProperty(0,APROP_Health)>0 && PlayerInGame(PlayerNumber()))
  {
  buttons = GetPlayerInput(-1, INPUT_BUTTONS);
  if(buttons & BT_STRAFE && checkLeftandRight(buttons) == 1 && LcheckLeftandRight(buttons) == 1){GiveInventory("SR50PowerSpeed",1);}
  Delay(7);
  }
}

function bool checkLeftandRight(int buttons)
{
	if (buttons & BT_MOVERIGHT || buttons & BT_MOVELEFT){return(1);}
	return(0);
}

function bool LcheckLeftandRight(int buttons)
{
	if (buttons & BT_RIGHT || buttons & BT_LEFT){return(1);}
	return(0);
}

script "ItemReloadACSBubble" (void)
{
int buttons;
while(GetActorProperty(0,APROP_Health)>0 && PlayerInGame(PlayerNumber()))
  {
  buttons = GetPlayerInput(-1, INPUT_BUTTONS);
  if(buttons & BT_RELOAD && CheckInventory("IsTreadingWater"))
    {
		TakeInventory("BubbleDabbleAmmo",10);
		GiveInventory("StopTreadingWater",1);
		ThrustThingZ(0,10,1,0);
		Delay(2);
    }
	Delay(2);
  }
}

script "DuoSlamCounter" (void)
{
SetActivatorToTarget(0);
SetResultValue(CheckInventory("WeaponChargeDuo"));
}

 script "uec_AutoToggleMethod" (void)
{
	SetResultValue(GetUserCVar(PlayerNumber(),"UEC_AutoToggleMethod"));
}

 script "uec_JewelmanGive" (void)
{
	GiveInventory("Jewelslot1",GetUserCVar(PlayerNumber(),"UEC_Jewel1"));
	GiveInventory("Jewelslot2",GetUserCVar(PlayerNumber(),"UEC_Jewel2"));
	GiveInventory("Jewelslot3",GetUserCVar(PlayerNumber(),"UEC_Jewel3"));
	GiveInventory("Jewelslot4",GetUserCVar(PlayerNumber(),"UEC_Jewel4"));
}

 script "uec_JewelmanResetPlus" (void)
{
	SetResultValue(GetUserCVar(PlayerNumber(),"UEC_JewelResetPlus"));
}

 script "uec_AcidmanHUD" (void)
{
	SetResultValue(GetUserCVar(PlayerNumber(),"UEC_AcidmanHUD"));
}

script "ImpairmentACS" (void)
{
SetResultValue(100-CheckInventory("ImpairmentStack"));
}

Script "cbm_ClownPegSwing" (int timeout)
{

	int TargetTID = ACS_ExecuteWithResult(147,0);

	If(CheckActorInventory(TargetTID,"RushJetCounter") >= 5){terminate;}
	If(CheckActorInventory(TargetTID,"YoGeekyAmmo") < 75 && CheckActorInventory(TargetTID,"ThunderClawBoss") == 1){terminate;}
	

	int hookx = GetActorX(0);
	int hooky = GetActorY(0);
	int hookz = GetActorZ(0);
	int playerx = GetActorX(TargetTID);
	int playery = GetActorY(TargetTID);
	int thrust;
	int zthrust;
	int ThrustTimeOut=0;

	if(timeout > 0){ThrustTimeOut = timeout;}

	//SetActorState(0,"TargetClear",1);

	TakeActorInventory(TargetTID,"YoGeekyAmmo",75);
	TakeActorInventory(TargetTID,"JumpCancler",1);
	TakeActorInventory(TargetTID,"ClownShockUpPeg2",1);
	GiveActorInventory(TargetTID,"ClownShockUpPeg",1);

	If(GetActorZ(TargetTID) - GetActorFloorZ(TargetTID)<8)
		{
		ThrustThingZ(TargetTID,35,0,0);
		Delay(2);
		}
	While(GetActorZ(TargetTID) >= (hookz-64.0) && ThrustTimeOut < 105)
		{
		ThrustThingZ(TargetTID,8,1,1);
		ThrustThing(VectorAngle(hookx - playerx, hooky - playery)>>8,1,1,TargetTID);
		playerx=GetActorX(TargetTID);
		playery=GetActorY(TargetTID);
		ThrustTimeOut++;
		Delay(1);
		}

	thrust = xyDistance(0,TargetTID)/10;//Clown_xyDistance(hookx, hooky, TargetTID)/10;
	zthrust = zDistance(0,TargetTID)/13;//Clown_zDistance(hookz, TargetTID)/13;
	//if(thrust < 10){thrust=10;}
	//if(thrust > 50){thrust=50;}
	//Log(s:"ThrustTimeOut = ",i:ThrustTimeOut,s:" thrust = ",i:thrust,s:" zthrust = ",i:zthrust);

	ThrustThing(VectorAngle(hookx - playerx, hooky - playery)>>8,thrust*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,1,TargetTID);
	ThrustThingZ(TargetTID,0,0,0);
	ThrustThingZ(TargetTID,zthrust*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,0,1);
	Delay(5);
	ThrustThingZ(TargetTID,10*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,0,1);
	Delay(2);
	ThrustThingZ(TargetTID,14*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,0,1);
	Delay(2);
	ThrustThingZ(TargetTID,18*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,0,1);
	Delay(2);
	ThrustThingZ(TargetTID,20*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,0,1);
	Delay(2);
	ThrustThingZ(TargetTID,22*(100-CheckActorInventory(TargetTID,"ImpairmentStack"))/100,0,1);

	SpawnForced("ClownmanGrabSounder",GetActorX(0),GetActorY(0),GetActorZ(0));
	TakeActorInventory(TargetTID,"ClownShockUpPeg",1);
	GiveActorInventory(TargetTID,"ClownShockUpPeg2",1);
}

function int Clown_xyDistance (int tid1_x, int tid1_y, int tid2)
{
	int x, y, d;
	x = tid1_x - GetActorX(tid2) >> 16;
	y = tid1_y - GetActorY(tid2) >> 16;
	d = sqrt8( x*x + y*y );
	return d;
}

function int Clown_zdistance (int tid1_z, int tid2)
{
	int z;
	z = tid1_z - GetActorZ(tid2) >> 16;
	return z;
}
